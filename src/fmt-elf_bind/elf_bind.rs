#![allow(non_camel_case_types, non_upper_case_globals, non_snake_case)]
#[macro_use]
extern crate macros;
extern crate util;
use util::Swap;

impl<T> Swap for __BindgenUnionField<T> {
    fn bswap(&mut self) {}
}

include!(concat!(env!("OUT_DIR"), "/out.rs"));

// perl -ne 'if (/#define (DT_\w+)(?<!NUM)(?<!DT_ENCODING)\s+([0-9]+|0x[0-9a-fA-F]+a)/) { print "$1 => \"$1\",\n" }' externals/elf/elf.h | pbcopy
pub fn d_tag_to_str(tag: u32) -> Option<&'static str> {
    Some(match tag {
        DT_NULL => "DT_NULL",
        DT_NEEDED => "DT_NEEDED",
        DT_PLTRELSZ => "DT_PLTRELSZ",
        DT_PLTGOT => "DT_PLTGOT",
        DT_HASH => "DT_HASH",
        DT_STRTAB => "DT_STRTAB",
        DT_SYMTAB => "DT_SYMTAB",
        DT_RELA => "DT_RELA",
        DT_RELASZ => "DT_RELASZ",
        DT_RELAENT => "DT_RELAENT",
        DT_STRSZ => "DT_STRSZ",
        DT_SYMENT => "DT_SYMENT",
        DT_INIT => "DT_INIT",
        DT_FINI => "DT_FINI",
        DT_SONAME => "DT_SONAME",
        DT_RPATH => "DT_RPATH",
        DT_SYMBOLIC => "DT_SYMBOLIC",
        DT_REL => "DT_REL",
        DT_RELSZ => "DT_RELSZ",
        DT_RELENT => "DT_RELENT",
        DT_PLTREL => "DT_PLTREL",
        DT_DEBUG => "DT_DEBUG",
        DT_TEXTREL => "DT_TEXTREL",
        DT_JMPREL => "DT_JMPREL",
        DT_RUNPATH => "DT_RUNPATH",
        DT_FLAGS => "DT_FLAGS",
        DT_PREINIT_ARRAY => "DT_PREINIT_ARRAY",
        DT_PREINIT_ARRAYSZ => "DT_PREINIT_ARRAYSZ",
        DT_VALRNGLO => "DT_VALRNGLO",
        DT_GNU_PRELINKED => "DT_GNU_PRELINKED",
        DT_GNU_CONFLICTSZ => "DT_GNU_CONFLICTSZ",
        DT_GNU_LIBLISTSZ => "DT_GNU_LIBLISTSZ",
        DT_CHECKSUM => "DT_CHECKSUM",
        DT_PLTPADSZ => "DT_PLTPADSZ",
        DT_MOVEENT => "DT_MOVEENT",
        DT_MOVESZ => "DT_MOVESZ",
        DT_FEATURE_1 => "DT_FEATURE_1",
        DT_POSFLAG_1 => "DT_POSFLAG_1",
        DT_SYMINSZ => "DT_SYMINSZ",
        DT_SYMINENT => "DT_SYMINENT",
        DT_ADDRRNGLO => "DT_ADDRRNGLO",
        DT_GNU_HASH => "DT_GNU_HASH",
        DT_TLSDESC_PLT => "DT_TLSDESC_PLT",
        DT_TLSDESC_GOT => "DT_TLSDESC_GOT",
        DT_GNU_CONFLICT => "DT_GNU_CONFLICT",
        DT_GNU_LIBLIST => "DT_GNU_LIBLIST",
        DT_CONFIG => "DT_CONFIG",
        DT_DEPAUDIT => "DT_DEPAUDIT",
        DT_AUDIT => "DT_AUDIT",
        DT_SYMINFO => "DT_SYMINFO",
        DT_VERSYM => "DT_VERSYM",
        DT_RELACOUNT => "DT_RELACOUNT",
        DT_RELCOUNT => "DT_RELCOUNT",
        DT_FLAGS_1 => "DT_FLAGS_1",
        DT_AUXILIARY => "DT_AUXILIARY",
        DT_FILTER => "DT_FILTER",
    
        _ => return None,
    })
}

pub fn e_machine_to_str(tag: u32) -> Option<&'static str> {
    Some(match tag {
        EM_NONE => "EM_NONE",
        EM_M32 => "EM_M32",
        EM_SPARC => "EM_SPARC",
        EM_386 => "EM_386",
        EM_68K => "EM_68K",
        EM_88K => "EM_88K",
        EM_860 => "EM_860",
        EM_MIPS => "EM_MIPS",
        EM_S370 => "EM_S370",
        EM_MIPS_RS3_LE => "EM_MIPS_RS3_LE",
        EM_PARISC => "EM_PARISC",
        EM_VPP500 => "EM_VPP500",
        EM_SPARC32PLUS => "EM_SPARC32PLUS",
        EM_960 => "EM_960",
        EM_PPC => "EM_PPC",
        EM_PPC64 => "EM_PPC64",
        EM_S390 => "EM_S390",
        EM_V800 => "EM_V800",
        EM_FR20 => "EM_FR20",
        EM_RH32 => "EM_RH32",
        EM_RCE => "EM_RCE",
        EM_ARM => "EM_ARM",
        EM_FAKE_ALPHA => "EM_FAKE_ALPHA",
        EM_SH => "EM_SH",
        EM_SPARCV9 => "EM_SPARCV9",
        EM_TRICORE => "EM_TRICORE",
        EM_ARC => "EM_ARC",
        EM_H8_300 => "EM_H8_300",
        EM_H8_300H => "EM_H8_300H",
        EM_H8S => "EM_H8S",
        EM_H8_500 => "EM_H8_500",
        EM_IA_64 => "EM_IA_64",
        EM_MIPS_X => "EM_MIPS_X",
        EM_COLDFIRE => "EM_COLDFIRE",
        EM_68HC12 => "EM_68HC12",
        EM_MMA => "EM_MMA",
        EM_PCP => "EM_PCP",
        EM_NCPU => "EM_NCPU",
        EM_NDR1 => "EM_NDR1",
        EM_STARCORE => "EM_STARCORE",
        EM_ME16 => "EM_ME16",
        EM_ST100 => "EM_ST100",
        EM_TINYJ => "EM_TINYJ",
        EM_X86_64 => "EM_X86_64",
        EM_PDSP => "EM_PDSP",
        EM_FX66 => "EM_FX66",
        EM_ST9PLUS => "EM_ST9PLUS",
        EM_ST7 => "EM_ST7",
        EM_68HC16 => "EM_68HC16",
        EM_68HC11 => "EM_68HC11",
        EM_68HC08 => "EM_68HC08",
        EM_68HC05 => "EM_68HC05",
        EM_SVX => "EM_SVX",
        EM_ST19 => "EM_ST19",
        EM_VAX => "EM_VAX",
        EM_CRIS => "EM_CRIS",
        EM_JAVELIN => "EM_JAVELIN",
        EM_FIREPATH => "EM_FIREPATH",
        EM_ZSP => "EM_ZSP",
        EM_MMIX => "EM_MMIX",
        EM_HUANY => "EM_HUANY",
        EM_PRISM => "EM_PRISM",
        EM_AVR => "EM_AVR",
        EM_FR30 => "EM_FR30",
        EM_D10V => "EM_D10V",
        EM_D30V => "EM_D30V",
        EM_V850 => "EM_V850",
        EM_M32R => "EM_M32R",
        EM_MN10300 => "EM_MN10300",
        EM_MN10200 => "EM_MN10200",
        EM_PJ => "EM_PJ",
        EM_OPENRISC => "EM_OPENRISC",
        EM_ARC_A5 => "EM_ARC_A5",
        EM_XTENSA => "EM_XTENSA",
        EM_AARCH64 => "EM_AARCH64",
        EM_TILEPRO => "EM_TILEPRO",
        EM_TILEGX => "EM_TILEGX",
        EM_ALPHA => "EM_ALPHA",

        _ => return None,
    })
}
